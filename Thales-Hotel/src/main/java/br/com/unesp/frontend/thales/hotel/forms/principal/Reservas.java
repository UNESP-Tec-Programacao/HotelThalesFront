/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package br.com.unesp.frontend.thales.hotel.forms.principal;

import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import br.com.unesp.frontend.thales.hotel.domain.Reserve;
import br.com.unesp.frontend.thales.hotel.exceptions.NotFoundException;
import br.com.unesp.frontend.thales.hotel.request.HttpClient;
import br.com.unesp.frontend.thales.hotel.response.ReserveResponse;
import br.com.unesp.frontend.thales.hotel.response.ReserveListResponse;
import br.com.unesp.frontend.thales.hotel.response.RoomResponse;
import br.com.unesp.frontend.thales.hotel.util.IntegraSpring;
import com.google.gson.reflect.TypeToken;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import br.com.unesp.frontend.thales.hotel.response.ReserveResponse;
import br.com.unesp.frontend.thales.hotel.util.AtualizaUtil;

/**
 *
 * @author eteixeira
 */
public class Reservas extends javax.swing.JPanel {

    /**
     * Creates new form Reservas
     */
    public Reservas() {
        initComponents();
        preencherReservas();
    }

    private List<Reserve> reservas = new ArrayList<>();
    private javax.swing.DefaultListModel<String> listModel;

    public void preencherReservas() {

        Type responseType = new TypeToken<ReserveListResponse>() {
        }.getType();

        try{ 
            
            ReserveListResponse response = HttpClient.getList(IntegraSpring.BASE_URL + "reserve/reserved", responseType);
            if (response != null && response.getData() != null) {
                listModel = new DefaultListModel<>();

                response.getData().forEach(reserva -> {
                    reservas.add(reserva);
                    System.out.println(reserva.toString());
                    String display = String.format(
                            "[%s] Valor: R$%s - Término em: %s",
                            reserva.getCustomer().getIdentify(),
                            String.valueOf(reserva.getPrice()),
                            String.valueOf(reserva.getEndsAt().toString())
                    );
                    listModel.addElement(display);
                });
                
                reservasList.setModel(listModel);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar as reservas!\n" + ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro desconhecido ao carregar as reservas!\n" + ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        reservasList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        jButton1.setText("Reservar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        jButton3.setText("Voltar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        reservasList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(reservasList);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Reservas Atuais");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(230, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnExcluir)
                    .addComponent(jButton3))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SwingUtilities.invokeLater(() -> {
            JFrame frame = new JFrame("Reservar");
            frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
            frame.setContentPane(new CadastrarReservas()); // Embute o JPanel
            frame.pack();
            frame.setLocationRelativeTo(null); // Centraliza na tela
            frame.setVisible(true);
        });
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
        frame.setContentPane(new Home()); // volta para a tela Home
        frame.revalidate();
        frame.repaint();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        String reservaPExcluir = reservasList.getSelectedValue();
        Reserve reserva = new Reserve();
        reserva = reservas.get(reservasList.getSelectedIndex());
        
        if (reservaPExcluir == null || reservaPExcluir.isBlank()) {
            JOptionPane.showMessageDialog(null, "Selecione um quarto para excluir!\n", "Atenção!", JOptionPane.WARNING_MESSAGE);
        } else {
            int resposta = JOptionPane.showConfirmDialog(
                    null,
                    "Tem certeza que quer excluir o quarto?\n(Essa ação não pode ser revertida)",
                    "Confirmação",
                    JOptionPane.YES_NO_OPTION
            );
            if(resposta == 0){
                Type type = new TypeToken<ReserveResponse>() {}.getType();
                try{
                    ReserveResponse response = HttpClient.delete(IntegraSpring.BASE_URL + "reserve/" + reserva.getId(), reserva, type, null); 
                    if(response.getStatus() != 200){
                        throw new Exception("O retorno recebido é diferente do esperado.");
                    }
                    JOptionPane.showMessageDialog(null, "Reserva excluída com sucesso!\n", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                     new AtualizaUtil().atualizar();
                }catch (Exception ex){
                    JOptionPane.showMessageDialog(null, "Ocorreu um erro ao tentar excluir a reserva: !\nErro: " + ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
                }
                
            }else{
               JOptionPane.showMessageDialog(null, "Exclusão cancelada pelo usuário!\n", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_btnExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> reservasList;
    // End of variables declaration//GEN-END:variables
}
