/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package br.com.unesp.frontend.thales.hotel.forms.principal;

import br.com.unesp.frontend.thales.hotel.domain.Room;
import br.com.unesp.frontend.thales.hotel.exceptions.NotFoundException;
import br.com.unesp.frontend.thales.hotel.request.HttpClient;
import br.com.unesp.frontend.thales.hotel.response.RoomListResponse;
import br.com.unesp.frontend.thales.hotel.util.IntegraSpring;
import java.util.ArrayList;
import java.lang.reflect.Type;
import com.google.gson.reflect.TypeToken;
import java.util.List;
import javax.swing.JOptionPane;
import br.com.unesp.frontend.thales.hotel.response.RoomResponse;
import java.util.Locale;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import br.com.unesp.frontend.thales.hotel.dao.RoomDAO;
import br.com.unesp.frontend.thales.hotel.util.AtualizaUtil;

/**
 *
 * @author Eduks
 */
public class Quartos extends javax.swing.JPanel {

    List<RoomResponse> roomList = new ArrayList<>();
    List<Room> rooms = new ArrayList<>();
    private javax.swing.DefaultListModel<String> listModel;

    /**
     * Creates new form Quartos
     */
    public Quartos() {
        Locale.setDefault(new Locale("pt", "BR"));
        initComponents();
        initRooms();
    }

    public void recarregar() {
        this.repaint();
    }

    public void initRooms() {
        try {
            Type responseType = new TypeToken<RoomListResponse>() {
            }.getType();

            RoomListResponse response = HttpClient.getList(
                    IntegraSpring.BASE_URL + "room",
                    responseType
            );

            if (response != null && response.getData() != null) {
                listModel = new DefaultListModel<>();

                response.getData().forEach(room -> {
                    rooms.add(room);
                    String display = String.format(
                            "[%s] Nº %d - Categoria: %s - R$%.2f",
                            room.getName(),
                            room.getNumber(),
                            room.getCategory(),
                            room.getPrice()
                    );
                    listModel.addElement(display);
                });

                quartosList.setModel(listModel); // atualiza visualmente
            }

        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar quartos!", "Erro!", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro desconhecido!\n" + ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnCadastrar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        quartosList = new javax.swing.JList<>();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Listagem de Quartos");

        btnCadastrar.setLabel("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnExcluir.setLabel("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnVoltar.setLabel("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        quartosList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(quartosList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVoltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCadastrar)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(254, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar)
                    .addComponent(btnExcluir)
                    .addComponent(btnVoltar))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        String quartoPExcluir = quartosList.getSelectedValue();
        Room room = new Room();
        room = rooms.get(quartosList.getSelectedIndex());

        if (quartoPExcluir == null || quartoPExcluir.isBlank()) {
            JOptionPane.showMessageDialog(null, "Selecione um quarto para excluir!\n", "Atenção!", JOptionPane.WARNING_MESSAGE);
        } else {
            int resposta = JOptionPane.showConfirmDialog(
                    null,
                    "Tem certeza que quer excluir o quarto?\n(Essa ação não pode ser revertida)",
                    "Confirmação",
                    JOptionPane.YES_NO_OPTION
            );
            if (resposta == 0) {
                Type type = new TypeToken<RoomResponse>() {
                }.getType();
                try {
                    RoomResponse response = HttpClient.delete(IntegraSpring.BASE_URL + "room/" + room.getId(), room, type, null);
                    if (response.getStatus() != 200) {
                        throw new Exception("O retorno recebido é diferente do esperado.");
                    }
                    JOptionPane.showMessageDialog(null, "Quarto excluído com sucesso!\n", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                    new AtualizaUtil().atualizar();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Ocorreu um erro ao tentar excluir o quarto: !\nErro: " + ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Exclusão cancelada pelo usuário!\n", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
        frame.setContentPane(new Home()); // volta para a tela Home
        frame.revalidate();
        frame.repaint();
}//GEN-LAST:event_btnVoltarActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        SwingUtilities.invokeLater(() -> {
            JFrame frame = new JFrame("Cadastro de Quartos");
            frame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
            frame.setContentPane(new CadastrarQuartos()); // Embute o JPanel
            frame.pack();
            frame.setLocationRelativeTo(null); // Centraliza na tela
            frame.setVisible(true);
        });
    }//GEN-LAST:event_btnCadastrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> quartosList;
    // End of variables declaration//GEN-END:variables
}
